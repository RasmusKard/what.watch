services:
  server:
    build:
      context: .
      target: ${BUILD_TARGET}
    image: randwatch-server
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules


  db:
    build:
      context: ./create-testing-db
    image: randwatch-db
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    expose:
      - 3306
    ports:
      - "3307:3306"  
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', '127.0.0.1', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 100s
      retries: 10
  redis:
    image: "redis:latest"
    command: ["redis-server","--maxmemory","50mb"]
  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  # msg-broker:
  #   build: "./rabbitmq"
  #   volumes:
  #     - ./rabbitmq:/msgbroker
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy

volumes:
  db-data: 